{"name":"PHP: Nelson Martell Library","tagline":"A personal PHP library","body":"# PHP: Nelson Martell Library\r\n[![Travis Build Status](https://img.shields.io/travis/nelson6e65/php_nml/master.svg)](https://travis-ci.org/nelson6e65/php_nml)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/nelson6e65/php_nml/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/?branch=master)\r\n[![Code Coverage](https://scrutinizer-ci.com/g/nelson6e65/php_nml/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/?branch=master)\r\n[![Scrutinizer Build Status](https://scrutinizer-ci.com/g/nelson6e65/php_nml/badges/build.png?b=master)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/build-status/master)\r\n[![Latest Version](https://img.shields.io/packagist/v/nelson6e65/php_nml.svg)](https://packagist.org/packages/nelson6e65/php_nml)\r\n\r\n[![API Documentation](http://img.shields.io/badge/documentation-API-yellow.svg)](http://nelson6e65.github.io/php_nml/api)\r\n[![Wiki Documentation](http://img.shields.io/badge/documentation-WIKI-lightgray.svg)](https://github.com/nelson6e65/php_nml/wiki)\r\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)](LICENSE)\r\n\r\n[![Join the chat at https://gitter.im/nelson6e65/php_nml](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/nelson6e65/php_nml?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n<!-- TOC depth:4 withLinks:1 updateOnSave:0 orderedList:1 -->\r\n\r\n## Table of content\r\n1. [Description](#description)\r\n2. [Requirements](#requirements)\r\n3. [Installation](#installation)\r\n    1. [Before install](#before-install)\r\n    2. [Install](#install)\r\n        1. [Via composer](#via-composer)\r\n        2. [Via git submodule](#via-git-submodule)\r\n        3. [Manually](#manually)\r\n    3. [After install](#after-install)\r\n        1. [For composer projects](#for-composer-projects)\r\n        2. [For non-composer projects](#for-non-composer-projects)\r\n        3. [Code Analysis](#code-analysis)\r\n4. [Usage](#usage)\r\n\r\n<!-- /TOC -->\r\n\r\n\r\n## Description\r\nProvides a set of classes for PHP applications.\r\n\r\n**Note**: This is an unstable repository in development and should be treated as an ***alpha***.\r\n\r\n## Requirements\r\n* PHP 5.5 or greater\r\n* [CakePHP Utility Classes](https://github.com/cakephp/utility) [3.0.5](https://github.com/cakephp/utility/releases/tag/3.0.5) or grater - Only needed `Cake\\Utility\\Text` class, that should be loaded. There is a [copy of that class](vendor/Cake/Utility/Text.php) into `vendor` directory to be auto-used if CakePHP Utility Classes is not available.\r\n\r\n## Installation\r\nUse this instructions to install **NML** into your `vendor` directory as `nelson6e65/php_nml`.\r\n\r\n### Before install\r\nThis instructions assumes that your current directory is your *project root directory*. Use CD command as you need (`cd path/to/your/project/root`) before to proceed.\r\n\r\nExample: If your project is located at `/home/ltorvalds/github/awesome-php-project`, run:\r\n\r\n    cd /home/ltorvalds/github/awesome-php-project\r\n\r\n**Note**: You may need to install [Git](http://git-scm.com) or/and [Composer](https://getcomposer.org) in order to run some commands in the next steps.\r\n\r\n### Install\r\n\r\n#### Via composer\r\nJust run this command (your `composer.json` will be updated):\r\n\r\n    composer require nelson6e65/php_nml\r\n\r\n**Note**: Remember to add your `vendor` dependencies to your `.gitignore` file. (See [why](https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md)).\r\n\r\nRead more about Composer installs [here](https://getcomposer.org/doc/00-intro.md).\r\n\r\n#### Via git submodule\r\n\r\n    git submodule add https://github.com/nelson6e65/php_nml.git vendor/nelson6e65/php_nml\r\n    git submodule init\r\n    git submodule update\r\n\r\n**Note**: You can use ssh (`git@github.com:nelson6e65/php_nml.git`) instead of https.\r\n\r\nRead more about Git submodules [here](http://git-scm.com/book/en/v2/Git-Tools-Submodules).\r\n\r\n#### Manually\r\n- Download the lastest [release](https://github.com/nelson6e65/php_nml/releases).\r\n- Unzip that download.\r\n- Rename the resulting folder to `php_nml`.\r\n- Then move this folder into your `vendor/nelson6e65` directory (create parent folders as needed).\r\n\r\n\r\n### After install\r\nAfter you install NML, you should configure your app to autoload classes.\r\n\r\n#### For composer projects\r\nYou must include the composer autoloader (`vendor/autoload.php`) in your `config.php` or `bootstrap.php` (or whatever file that you perform autoload). In most of modern PHP frameworks this is made automatically.\r\n\r\n#### For non-composer projects\r\nThis library implements an auto-load system even for non-composer installs. You must include the [autoloader](autoload.php) provided (`vendor/nelson6e65/php_nml/autoload.php`).\r\n\r\nExample:\r\n\r\n```php\r\n<?php\r\n    # app/config.php\r\n    # . . .\r\n\r\n    require_once(PROJECT_ROOT.'/vendor/nelson6e65/php_nml/autoload.php');\r\n    // Note: 'PROJECT_ROOT' is your root directory (in this case, a PHP constant).\r\n\r\n    # . . .\r\n```\r\n\r\n\r\n\r\n\r\n**Note:** There is a minimal copy of [CakePHP Utility Classes](https://github.com/cakephp/utility) in `php_nml/vendor/Cake/Utility` directory. `vendor/nelson6e65/php_nml/autoload.php` includes  `vendor/nelson6e65/php_nml/vendor/autoload.php` file to autoloads that class(es) if there is not available.\r\n\r\n\r\n#### Code Analysis\r\nYou can, optionally, define the `CODE_ANALYSIS` constant if you like some notices and warnings to be\r\nthrows while you are coding/debugging. This is useful to watch some recommendations about usage of\r\nsome classes, functions, methods, etc.\r\n\r\n```php\r\n<?php\r\n    # app/config.php\r\n    # . . .\r\n\r\n    define('CODE_ANALYSIS', true);\r\n\r\n    # . . .\r\n```\r\n\r\n\r\n## Usage\r\nAfter install NML and configure your application, you will be able to use NML classes by importing/aliasing with the [use operator](http://php.net/manual/en/language.namespaces.importing.php):\r\n\r\n```php\r\n<?php\r\n//Example of Version usage:\r\nuse NelsonMartell\\Version;\r\n\r\n$nmlVersion = new Version(0, 3);\r\n\r\necho $nmlVersion.toString();\r\n\r\n```\r\n\r\nFor more details about available classes from NML, you can check the [API Documentation](http://nelson6e65.github.io/php_nml/api).\r\n","google":"UA-58599811-1","note":"Don't delete this file! It's used internally to help with page regeneration."}