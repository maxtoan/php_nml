{
  "name": "PHP: Nelson Martell Library",
  "tagline": "A personal PHP library",
  "body": "# PHP: Nelson Martell Library\r\n\r\n[![Travis Build Status](https://img.shields.io/travis/nelson6e65/php_nml/master.svg)](https://travis-ci.org/nelson6e65/php_nml)\r\n[![Scrutinizer](https://img.shields.io/scrutinizer/g/nelson6e65/php_nml.svg)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/?branch=master)\r\n[![Scrutinizer Coverage](https://img.shields.io/scrutinizer/coverage/g/nelson6e65/php_nml.svg)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/?branch=master)\r\n[![Scrutinizer Build Status](https://img.shields.io/scrutinizer/build/g/nelson6e65/php_nml.svg?b=master)](https://scrutinizer-ci.com/g/nelson6e65/php_nml/build-status/master)\r\n[![VersionEye](https://img.shields.io/versioneye/d/php/nelson6e65:php_nml.svg)](https://www.versioneye.com/php/nelson6e65:php_nml#dependencies)\r\n\r\n[![GitHub release](https://img.shields.io/github/tag/nelson6e65/php_nml.svg)](https://github.com/nelson6e65/php_nml/tags)\r\n[![Latest Version](https://img.shields.io/packagist/v/nelson6e65/php_nml.svg?label=stable)](https://packagist.org/packages/nelson6e65/php_nml)\r\n[![Latest unstable Version](https://img.shields.io/packagist/vpre/nelson6e65/php_nml.svg?label=unstable)](https://packagist.org/packages/nelson6e65/php_nml#dev-master)\r\n[![Waffle.io](https://img.shields.io/waffle/label/nelson6e65/php_nml/wip.svg?label=Work%20in%20progress)](http://waffle.io/nelson6e65/php_nml)\r\n[![GitHub commits](https://img.shields.io/github/commits-since/nelson6e65/php_nml/v0.6.0.svg)](https://github.com/nelson6e65/php_nml/compare/v0.6.0...master)\r\n\r\n[![License](https://img.shields.io/github/license/nelson6e65/php_nml.svg)](LICENSE)\r\n[![API Documentation](http://img.shields.io/badge/documentation-API-yellow.svg)](http://nelson6e65.github.io/php_nml/api)\r\n[![Wiki Documentation](http://img.shields.io/badge/documentation-WIKI-lightgray.svg)](https://github.com/nelson6e65/php_nml/wiki)\r\n\r\n[![Join the chat at https://gitter.im/nelson6e65/php_nml](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/nelson6e65/php_nml?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n\r\n<!-- TOC depthFrom:2 depthTo:6 withLinks:1 updateOnSave:0 orderedList:1 -->\r\n\r\n## Table of content\r\n\r\n1. [Description](#description)\r\n2. [Requirements](#requirements)\r\n3. [Installation](#installation)\r\n4. [Usage](#usage)\r\n    1. [Code Analysis](#code-analysis)\r\n\r\n<!-- /TOC -->\r\n\r\n\r\n## Description\r\nProvides a set of classes for PHP applications.\r\n\r\n**Note**: This is an unstable repository in development and should be treated as an ***alpha***.\r\n\r\n## Requirements\r\n* PHP 5.5 or greater\r\n* [CakePHP Utility Classes](https://github.com/cakephp/utility) [^3.0.1](https://github.com/cakephp/utility/releases/tag/3.0.1) or grater - Only required the `Cake\\Utility\\Text` class (this is installed by Composer autotically).\r\n\r\n\r\n## Installation\r\nUse this instructions to install **NML** into your `vendor` directory as `nelson6e65/php_nml`.\r\n\r\n> You will need [Composer](https://getcomposer.org) install and update NML and dependecies. For other alternative instructions, read [alternative instructions](https://github.com/nelson6e65/php_nml/wiki/Alternative-installation-methods).\r\n\r\n- Move to your project root directory. Example: `cd /var/www/html/my-awesome-php-project`.\r\n- Run `composer require nelson6e65/php_nml`. This installs `php_nml` and dependencies in your `vendor` directory (your `composer.json` will be updated).\r\n- Configure your app to autoload classes by including the composer autoloader (`vendor/autoload.php`) in your `config.php` or `bootstrap.php` (or whatever file that performs your autoloads). In most of modern PHP frameworks this is made automatically.\r\n\r\nRead more about Composer installs [here](https://getcomposer.org/doc/00-intro.md).\r\n\r\n**Note**: Remember to add your `vendor` dependencies to your `.gitignore` file. (See [why](https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md)).\r\n\r\n\r\n## Usage\r\nAfter install NML and configure your application, you will be able to use NML classes by importing/aliasing with the [use operator](http://php.net/manual/en/language.namespaces.importing.php):\r\n\r\n```php\r\n<?php\r\n//Example of Version usage:\r\nuse NelsonMartell\\Version;\r\n\r\n$nmlVersion = new Version(0, 6);\r\n\r\n// Create Version object parsing from string\r\n$nmlVersion = Version::parse('0.6.0');\r\n\r\n// Explicit to string\r\necho $nmlVersion->toString();\r\n\r\n// Implicit to string\r\necho $nmlVersion;\r\n?>\r\n\r\n<p>Nelson Martell Library, version <?= $nmlVersion ?></p>\r\n\r\n```\r\n\r\nFor more details about available classes from NML, you can check the [API Documentation](http://nelson6e65.github.io/php_nml/api).\r\n\r\n\r\n### Code Analysis\r\nYou can, optionally, define the `CODE_ANALYSIS` constant if you like some notices and warnings to be throws while you are coding/debugging. This is useful to watch some recommendations about usage of\r\nsome classes, functions, methods, etc.\r\n\r\n```php\r\n<?php\r\n    # app/config.php\r\n    # . . .\r\n\r\n    define('CODE_ANALYSIS', true);\r\n\r\n    # . . .\r\n?>\r\n```\r\n",
  "google": "UA-58599811-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}